<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on bnm 3000</title><link>https://bnm3k.github.io/</link><description>Recent content in Home on bnm 3000</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 15 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://bnm3k.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Archiving Time-Series Data from PostgreSQL into Parquet</title><link>https://bnm3k.github.io/blog/pg-parquet-archive-timeseries/</link><pubDate>Fri, 15 Nov 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/pg-parquet-archive-timeseries/</guid><description>Keeping your database lean</description></item><item><title>Graph Query Interfaces: A Comparison Between SQL and Cypher</title><link>https://bnm3k.github.io/blog/sql-cypher-flights/</link><pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/sql-cypher-flights/</guid><description>Featuring DuckDB &amp;amp; KuzuDB</description></item><item><title>LRU vs FIFO (with Lazy Promotion and Quick Demotion)</title><link>https://bnm3k.github.io/blog/lru-vs-fifo/</link><pubDate>Mon, 23 Sep 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/lru-vs-fifo/</guid><description>Sprinkling some lazy promotion and quick demotion on FIFO</description></item><item><title> Notes on 'A large scale analysis of hundreds of in-memory cache clusters at Twitter'</title><link>https://bnm3k.github.io/blog/large-scale-analysis-caching-twitter/</link><pubDate>Sun, 22 Sep 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/large-scale-analysis-caching-twitter/</guid><description>TTLs are prevalent, object sizes are small, metadata overhead can be large, object sizes change, FIFO is better than LRU, you&amp;rsquo;ve got to address memory fragmentation</description></item><item><title>Some Notes on Vector Indexing in DuckDB</title><link>https://bnm3k.github.io/blog/vss-duckdb-caveats/</link><pubDate>Tue, 06 Aug 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/vss-duckdb-caveats/</guid><description>Once you&amp;rsquo;ve indexed your vectors for similarity search, be sure to check your query plans, just in case the DB decides to opt for a sequential scan</description></item><item><title>Combining Lexical and Semantic Search with Reciprocal Rank Fusion</title><link>https://bnm3k.github.io/blog/hybrid-search-rrf/</link><pubDate>Sun, 04 Aug 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/hybrid-search-rrf/</guid><description>Best of both worlds sort of thing</description></item><item><title>Vector Indexing and Search with DuckDB &amp; FastEmbed</title><link>https://bnm3k.github.io/blog/vector-search-duckdb-fastembed/</link><pubDate>Sat, 03 Aug 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/vector-search-duckdb-fastembed/</guid><description>Using DuckDB for vector/semantic search</description></item><item><title>Leanstore: High Performance Low-Overhead Buffer Pool</title><link>https://bnm3k.github.io/blog/leanstore/</link><pubDate>Tue, 11 Jun 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/leanstore/</guid><description>A dash of pointer swizzling, a sprinkle of optimistic locking and a touch of lean eviction, that&amp;rsquo;s the secret to a high performance buffer pool!</description></item><item><title>Tiered Storage via 2-Tree</title><link>https://bnm3k.github.io/blog/two-tree/</link><pubDate>Mon, 10 Jun 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/two-tree/</guid><description>Split a data-structure into two: a memory-optimized &amp;rsquo;top&amp;rsquo;-tree and a disk optimized &amp;lsquo;bottom&amp;rsquo;-tree. Implement a lightweight migration protocol for hot records to move up and cold records down.</description></item><item><title>Pointer Swizzling Buffer Pools</title><link>https://bnm3k.github.io/blog/pointer-swizzling/</link><pubDate>Sun, 09 Jun 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/pointer-swizzling/</guid><description>Switching pointers as the data pointed to moves to and fro memory and secondary storage</description></item><item><title>Compacting Transactional Data in HyPer</title><link>https://bnm3k.github.io/blog/hyper-compaction/</link><pubDate>Sat, 08 Jun 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/hyper-compaction/</guid><description>Keep hot tuples uncompressed, organize cold data into chunks of columns then use lightweight compression, handle both OLTP and OLAP workloads</description></item><item><title>Virtual Memory Hot/Cold Data Re-organization for OLTP</title><link>https://bnm3k.github.io/blog/efficient-os-paging-hot-cold-db/</link><pubDate>Fri, 07 Jun 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/efficient-os-paging-hot-cold-db/</guid><description>Hot/Cold aware memory allocation with locking of the hot region to physical memory and letting the OS swap out cold LRU pages as needed.</description></item><item><title>Offline (but Faster and more Accurate) Classification of Hot and Cold Data</title><link>https://bnm3k.github.io/blog/project-siberia-hot-cold-id/</link><pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/project-siberia-hot-cold-id/</guid><description>Hint, it&amp;rsquo;s based on exponential smoothing</description></item><item><title>Anti-Caching</title><link>https://bnm3k.github.io/blog/anti-caching/</link><pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/anti-caching/</guid><description>Track hot/cold data at tuple-level granularity. Evict LRU cold data in blocks.</description></item><item><title>Larger-Than-Memory Data Management</title><link>https://bnm3k.github.io/blog/larger-than-mem-intro/</link><pubDate>Tue, 04 Jun 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/larger-than-mem-intro/</guid><description>For when the database exceeds the main memory size</description></item><item><title>Hybrid Locking &amp; Synchronization</title><link>https://bnm3k.github.io/blog/dbms-hybrid-locking/</link><pubDate>Sun, 26 May 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/dbms-hybrid-locking/</guid><description>Fast-path optimistic locking with fallback to pessimistic RW locks under contention</description></item><item><title>Optimizing Data Placement for Distributed OLAP Systems</title><link>https://bnm3k.github.io/blog/data-placement-optimization/</link><pubDate>Tue, 16 Apr 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/data-placement-optimization/</guid><description>Using MIP solvers to model and optimize shard placement</description></item><item><title>DuckDB JIT Compiled UDFs with Numba</title><link>https://bnm3k.github.io/blog/duckdb-jit-udfs-numba/</link><pubDate>Thu, 04 Apr 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/duckdb-jit-udfs-numba/</guid><description>JIT compiling your vectorized UDFs with Numba. Plus pure SQL is plenty fast if you can figure out how to write it</description></item><item><title>Guided Local Search for the Capacitated Facility Location Problem</title><link>https://bnm3k.github.io/blog/guided-local-search-flp/</link><pubDate>Thu, 21 Mar 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/guided-local-search-flp/</guid><description>Overview of Guided Local Search plus how it can be applied to the capacitated facility location problem.</description></item><item><title>Minizinc: Alternative Modeling Approaches for the Facility Location Problem</title><link>https://bnm3k.github.io/blog/facility-location-problem-p2/</link><pubDate>Mon, 11 Mar 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/facility-location-problem-p2/</guid><description>Multiple views and Channeling Constraints make for faster models (in some cases)</description></item><item><title>The Facility Location Problem</title><link>https://bnm3k.github.io/blog/facility-location-problem/</link><pubDate>Wed, 06 Mar 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/facility-location-problem/</guid><description>Discrete Optimization: Where to construct facilities so as to minimize setup costs and customer servicing costs while ensuring each facility is able to meet customer demands.</description></item><item><title>Vectorized DuckDB UDFs with Rust and Python FFI</title><link>https://bnm3k.github.io/blog/rust-duckdb-py-udf/</link><pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/rust-duckdb-py-udf/</guid><description>Implementing vectorized UDFs in Rust that you can use in DuckDB, with a little help from Arrow</description></item><item><title>Optimizing CPU &amp; Memory Interaction: Matrix Multiplication</title><link>https://bnm3k.github.io/blog/matrix-mult-and-caching/</link><pubDate>Sun, 07 Jan 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/matrix-mult-and-caching/</guid><description>Same algo, different memory access patterns, what could go wrong (or right)!</description></item><item><title>x86 Cache Control Instructions</title><link>https://bnm3k.github.io/blog/cache-control-instrs/</link><pubDate>Fri, 05 Jan 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/cache-control-instrs/</guid><description>Wherein the OS and user get more control over the L1,L2 and L3 caches, mostly for performance.</description></item><item><title>Retrieving Memory and Cache Organization</title><link>https://bnm3k.github.io/blog/mem-cache-details/</link><pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/mem-cache-details/</guid><description>Memory, Cache levels, Cache sizes, TLB, associativity and so on</description></item><item><title>Microbenchmarking: Way more than I set out to know</title><link>https://bnm3k.github.io/blog/microbenchmarking-c/</link><pubDate>Sat, 25 Nov 2023 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/microbenchmarking-c/</guid><description>RDTSC, Out-of-order execution, OS interrupts, cycles, frequency and more.</description></item><item><title>Logging in Go</title><link>https://bnm3k.github.io/blog/logging/</link><pubDate>Tue, 22 Aug 2023 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/logging/</guid><description>Best practices, Logging levels, structured logging, Logging &amp;amp; Telemetry (Metrics, Tracing), Audit logs</description></item><item><title>Handling Missing Values in Timeseries Datasets</title><link>https://bnm3k.github.io/blog/timeseries-filling-missing-values/</link><pubDate>Thu, 27 Jul 2023 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/timeseries-filling-missing-values/</guid><description>Filling gaps using Last observation carried forward, next observation carried backwards, median &amp;amp; linear interpolation</description></item><item><title>Wrangling JSON with DuckDB</title><link>https://bnm3k.github.io/blog/wrangling-json-with-duckdb/</link><pubDate>Tue, 25 Jul 2023 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/wrangling-json-with-duckdb/</guid><description>For when you need to impose some structure on semi-structured data</description></item><item><title>Parquet + Zstd: Smaller faster data formats</title><link>https://bnm3k.github.io/blog/parquet-zstd/</link><pubDate>Sat, 08 Jul 2023 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/parquet-zstd/</guid><description>Often, parquet files have to be compressed. For fast compression, use LZ4 or Snappy. For the highest data compression ratio, use brotli. For both, zstd</description></item><item><title>Lateral Joins &amp; Iterators in SQL</title><link>https://bnm3k.github.io/blog/sql-lateral-joins/</link><pubDate>Sat, 24 Jun 2023 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/sql-lateral-joins/</guid><description>Sneaking for-loops into SQL without anyone noticing</description></item><item><title>SQL Grouping sets, Rollups &amp; Cube</title><link>https://bnm3k.github.io/blog/sql-grouping-sets/</link><pubDate>Thu, 22 Jun 2023 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/sql-grouping-sets/</guid><description>Computing multiple Group-bys with less steps</description></item><item><title>Programmatically creating a DuckDB table from an Arrow schema</title><link>https://bnm3k.github.io/blog/duckdb-arrow-data-types/</link><pubDate>Fri, 16 Jun 2023 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/duckdb-arrow-data-types/</guid><description>PyArrow lets you create an empty table. Use that instead of custom mappings to create a DuckDB schema.</description></item><item><title>Handling panics from goroutines you've spawned</title><link>https://bnm3k.github.io/blog/goroutine-panics/</link><pubDate>Thu, 11 May 2023 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/goroutine-panics/</guid><description>It&amp;rsquo;s one thing to handle a panic that&amp;rsquo;s occured within a function. It&amp;rsquo;s an entirely different affair to handle a panic that occured within a goroutine that&amp;rsquo;s been spawned.</description></item><item><title>Benchmarking SQLite inserts</title><link>https://bnm3k.github.io/blog/sqlite-benchmarking-writes/</link><pubDate>Sun, 16 Apr 2023 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/sqlite-benchmarking-writes/</guid><description>Going from 750 writes per second to 25,0000 with a bit of configuring</description></item><item><title>Getting started with TLA+</title><link>https://bnm3k.github.io/blog/getting-started-tla/</link><pubDate>Sat, 14 Jan 2023 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/getting-started-tla/</guid><description/></item><item><title>End-to-End Arguments in System Design</title><link>https://bnm3k.github.io/blog/end-to-end-arguments-in-system-design/</link><pubDate>Sun, 30 Oct 2022 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/end-to-end-arguments-in-system-design/</guid><description>Paper Review</description></item><item><title>Distributed Reference Counting</title><link>https://bnm3k.github.io/blog/distributed-reference-counting/</link><pubDate>Sat, 29 Oct 2022 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/distributed-reference-counting/</guid><description/></item><item><title>Malloc excess bytes</title><link>https://bnm3k.github.io/blog/malloc-excess/</link><pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/malloc-excess/</guid><description>Space requested from malloc is a lower bound (at least or more)</description></item><item><title>Go data-structure tricks: google/Btree</title><link>https://bnm3k.github.io/blog/go-btree-data-structure/</link><pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/go-btree-data-structure/</guid><description>A couple of interesting approaches to concurrency and memory allocation from the Go google/btree package</description></item><item><title>Generalized Range Difference, Recursion &amp; Search Availability in PostgreSQL</title><link>https://bnm3k.github.io/blog/range-difference-search-availability/</link><pubDate>Sun, 07 Jun 2020 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/range-difference-search-availability/</guid><description>We&amp;rsquo;re building a scheduling app. Users mark booked slots, represented in Postgres using time or date-range data types. Let&amp;rsquo;s see how we can find all the freely available slots efficiently</description></item><item><title>Speeding up unique constraint checks in PostgreSQL... or not</title><link>https://bnm3k.github.io/blog/pg-unique-constraints/</link><pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/pg-unique-constraints/</guid><description>Are exclusion constraints using hash indexes faster than plain old uniqueness checks? Let&amp;rsquo;s find out</description></item><item><title>SQL gotcha: now() vs 'now'</title><link>https://bnm3k.github.io/blog/sql-gotcha-now/</link><pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/sql-gotcha-now/</guid><description>Make sure you&amp;rsquo;re using the correct defaults when defining columns</description></item><item><title>Bugs From ignoring C Operator Associativity</title><link>https://bnm3k.github.io/blog/bugs-c-operator-associativity/</link><pubDate>Thu, 23 Jan 2020 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/bugs-c-operator-associativity/</guid><description>Mistakes were made</description></item><item><title>Go Channels Suffice for Synchronization</title><link>https://bnm3k.github.io/blog/go-channels-concurrency-sync/</link><pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/go-channels-concurrency-sync/</guid><description>Or how to implement Futures/Promises in Go without having to juggle locks and waitgroups</description></item><item><title>Back To Basics: The foundation of Joins in SQL</title><link>https://bnm3k.github.io/blog/sql-joins-p2/</link><pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/sql-joins-p2/</guid><description>Writing SQL joins without using joins at all. A quick history of Database Models, Schemas, Constraints, Cross-products and everything in between</description></item><item><title>SQL joins as reduce/folds over relations</title><link>https://bnm3k.github.io/blog/sql-joins-p1/</link><pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/sql-joins-p1/</guid><description>Of what to make of joins in sql, mental models and building better understanding</description></item><item><title>Golang Custom Loggers: using Postgres and Leveldb</title><link>https://bnm3k.github.io/blog/go-custom-logger-pg-leveldb/</link><pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/go-custom-logger-pg-leveldb/</guid><description>Coupling logging to the some destination (in this case Postgres and leveldb) within the application itself isn&amp;rsquo;t by any means a good idea. Still, given the flexibility interfaces in Go provide, why not give it a try ¯\&lt;em>(ツ)&lt;/em>/¯</description></item><item><title>Handling Bank Transactions, V2</title><link>https://bnm3k.github.io/blog/sql-bank-txs-v2/</link><pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/sql-bank-txs-v2/</guid><description>Version 2 of a simplified Node.js-based API + PG database layer for handling a bank&amp;rsquo;s intra-account transfer operations</description></item><item><title>Handling Bank Transactions, V1</title><link>https://bnm3k.github.io/blog/sql-bank-txs-v1/</link><pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/sql-bank-txs-v1/</guid><description>Overview of a simplified Node.js-based API + Postgres database layer for handling a bank&amp;rsquo;s intra-account transfer operations</description></item><item><title>Var, Let, Const and the 'commonly' expected behaviour</title><link>https://bnm3k.github.io/blog/js-let-const-var/</link><pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/js-let-const-var/</guid><description>Javascript quirks and idiosyncracies. Or why learning a new programming language is hard when coming in with implicit assumptions from other languages</description></item><item><title>PG Transactions &amp; Isolation levels: Airline Seat Booking</title><link>https://bnm3k.github.io/blog/airline-tx-postgres-isolation-levels/</link><pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/airline-tx-postgres-isolation-levels/</guid><description>Using the right isolation level to avoid nasty billing errors when building database-managed booking systems</description></item><item><title>Logging with trace IDs in Node.js - pino, express and cls-hooked</title><link>https://bnm3k.github.io/blog/trace-ids-logging-nodejs/</link><pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/trace-ids-logging-nodejs/</guid><description>A neat way to add tracing or transaction ids for each request-response cycle with as little modification to the rest of the code as possible</description></item><item><title>Programming Pearls - Array Rotation</title><link>https://bnm3k.github.io/blog/array-rotation/</link><pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate><guid>https://bnm3k.github.io/blog/array-rotation/</guid><description>Programming, Pearls and a couple of interesting solutions for rotating elements within an array</description></item></channel></rss>